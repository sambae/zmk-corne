#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <75>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            require-prior-idle-ms = <125>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    macros {
        alfred: alfred {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "ALFRED";
        };
    };

    combos {
        compatible = "zmk,combos";

        qwerty {
            bindings = <&tog 3>;
            key-positions = <13 44 45 27>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            display-name = "COLEMAK";
            bindings = <
&kp ESCAPE  &kp Q           &kp W             &kp F          &kp P           &kp G                                &kp UP_ARROW                     &kp J            &kp L           &kp U        &kp Y              &kp SEMICOLON    &kp GRAVE
&lt 2 TAB   &hm LEFT_ALT A  &hm LEFT_SHIFT R  &hm LCTRL S    &hm LGUI T      &kp D                      &kp LEFT  &kp LS(LG(NUMBER_3))  &kp RIGHT  &kp H            &hm LEFT_GUI N  &hm RCTRL E  &hm RIGHT_SHIFT I  &hm RIGHT_ALT O  &kp SQT
&kp MINUS   &kp Z           &kp X             &kp C          &kp V           &kp B        &kp K_MUTE              &kp DOWN                         &kp K            &kp M           &kp COMMA    &kp DOT            &kp FSLH         &kp EQUAL
                                              &kp LG(SPACE)  &kp LEFT_SHIFT  &lt 1 ENTER                                                           &lt 1 BACKSPACE  &kp SPACE       &kp AT_SIGN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        symbol {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL    &kp HASH       &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT                               &kp LG(LS(NUMBER_4))              &kp UNDER  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp POUND  &kp BACKSPACE
&trans  &kp DOLLAR  &kp CARET      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT              &kp C_PREV  &kp C_PLAY_PAUSE      &kp C_NEXT  &kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp SLASH  &kp ENTER
&trans  &kp TILDE   &kp AMPERSAND  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp BACKSLASH  &trans                &kp C_AC_SCROLL_DOWN              &kp PLUS   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp STAR   &kp EQUAL
                                   &trans                &trans                 &trans                                                                 &trans     &kp NUMBER_0  &kp PERIOD
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        util {
            display-name = "UTIL";
            bindings = <
&trans  &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                                           &kp LC(LA(UP_ARROW))                     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10                   &bt BT_CLR_ALL
&trans  &trans           &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3                   &kp LA(LC(LEFT))  &kp LA(LC(ENTER))     &kp LA(LC(RIGHT))  &kp LEFT         &kp DOWN         &kp UP           &kp RIGHT        &kp LG(LS(LEFT_BRACKET))  &kp LG(LS(RIGHT_BRACKET))
&trans  &rgb_ug RGB_TOG  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF  &rgb_ug RGB_EFF  &kp C_MUTE                      &kp LA(LC(DOWN))                         &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &kp END                   &kp PG_DN
                                          &trans           &trans           &trans                                                                                    &trans           &trans           &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        qwerty {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T                     &trans          &kp Y   &kp U   &kp I      &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D   &kp F   &kp G             &trans  &trans  &trans  &kp H   &kp J   &kp K      &kp L    &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B   &trans            &trans          &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &trans
                      &trans  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
